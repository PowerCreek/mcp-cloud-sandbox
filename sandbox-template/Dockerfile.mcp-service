FROM node:20-alpine

WORKDIR /app

# Install dependencies for running MCP tools
RUN apk add --no-cache \
    bash \
    curl \
    git \
    python3 \
    py3-pip \
    docker-cli

# Copy both gateway and bridge packages
COPY mcp-gateway/package*.json ./mcp-gateway/
COPY dev-mcp-service/package*.json ./dev-mcp-service/
COPY mcp-http-bridge/package*.json ./mcp-http-bridge/

# Install dependencies for both
WORKDIR /app/mcp-gateway
RUN npm install

WORKDIR /app/dev-mcp-service
RUN npm install

WORKDIR /app/mcp-http-bridge
RUN npm install

# Copy source files
WORKDIR /app
COPY mcp-gateway/ ./mcp-gateway/
COPY dev-mcp-service/ ./dev-mcp-service/
COPY mcp-http-bridge/ ./mcp-http-bridge/
COPY deps/ ./deps/
COPY entrypoint-*.sh ./
COPY entrypoint.sh ./

# Create symlink for init scripts and make entrypoints executable
RUN ln -s /app/deps/init /app/init && \
    chmod +x ./entrypoint-*.sh && \
    chmod +x ./entrypoint.sh

# Default environment variables
ENV MCP_HTTP_PORT=3000
ENV NODE_ENV=production

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${MCP_HTTP_PORT}/health || exit 1

# Expose the HTTP port
EXPOSE ${MCP_HTTP_PORT}

# Default command runs the entrypoint script (checks MCP_COMMAND)
CMD ["./entrypoint.sh"]
